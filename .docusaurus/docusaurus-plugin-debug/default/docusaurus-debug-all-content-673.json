{
  "docusaurus-plugin-content-docs": {
    "default": {
      "loadedVersions": [
        {
          "versionName": "current",
          "label": "Next",
          "banner": null,
          "badge": false,
          "noIndex": false,
          "className": "docs-version-current",
          "path": "/docs",
          "tagsPath": "/docs/tags",
          "editUrl": "https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs",
          "editUrlLocalized": "https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/i18n/en/docusaurus-plugin-content-docs/current",
          "isLast": true,
          "routePriority": -1,
          "sidebarFilePath": "/Users/eldoraboo/Desktop/GitHub/afms-optimizer/sidebars.js",
          "contentPath": "/Users/eldoraboo/Desktop/GitHub/afms-optimizer/docs",
          "contentPathLocalized": "/Users/eldoraboo/Desktop/GitHub/afms-optimizer/i18n/en/docusaurus-plugin-content-docs/current",
          "docs": [
            {
              "unversionedId": "added-features/downloading-result-files",
              "id": "added-features/downloading-result-files",
              "title": "Downloading Result Files",
              "description": "To access the files processed in the optimizer backend, we improved the API to include a downloadfile method that allows users to **download the results** stored in the output folder_. Then we add a function in the frontend to auto-download the file once the optimization process is completed.",
              "source": "@site/docs/added-features/downloading-result-files.md",
              "sourceDirName": "added-features",
              "slug": "/added-features/downloading-result-files",
              "permalink": "/docs/added-features/downloading-result-files",
              "draft": false,
              "editUrl": "https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/added-features/downloading-result-files.md",
              "tags": [],
              "version": "current",
              "sidebarPosition": 1,
              "frontMatter": {
                "sidebar_position": 1
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Added Features",
                "permalink": "/docs/category/added-features"
              },
              "next": {
                "title": "Further Improvements",
                "permalink": "/docs/category/further-improvements"
              }
            },
            {
              "unversionedId": "further-improvements/error-handling",
              "id": "further-improvements/error-handling",
              "title": "Error Handling",
              "description": "For invalid input values and scenarios with no solutions, the tool does not display any message.",
              "source": "@site/docs/further-improvements/error-handling.md",
              "sourceDirName": "further-improvements",
              "slug": "/further-improvements/error-handling",
              "permalink": "/docs/further-improvements/error-handling",
              "draft": false,
              "editUrl": "https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/further-improvements/error-handling.md",
              "tags": [],
              "version": "current",
              "sidebarPosition": 2,
              "frontMatter": {
                "sidebar_position": 2
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Vulnerabilities",
                "permalink": "/docs/further-improvements/vulnerabilities"
              },
              "next": {
                "title": "MSO: Text Classification",
                "permalink": "/docs/category/mso-text-classification"
              }
            },
            {
              "unversionedId": "further-improvements/vulnerabilities",
              "id": "further-improvements/vulnerabilities",
              "title": "Vulnerabilities",
              "description": "Vulnerabilities like sonatype and CVE were detected within the images of the Docker layer.",
              "source": "@site/docs/further-improvements/vulnerabilities.md",
              "sourceDirName": "further-improvements",
              "slug": "/further-improvements/vulnerabilities",
              "permalink": "/docs/further-improvements/vulnerabilities",
              "draft": false,
              "editUrl": "https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/further-improvements/vulnerabilities.md",
              "tags": [],
              "version": "current",
              "sidebarPosition": 1,
              "frontMatter": {
                "sidebar_position": 1
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Further Improvements",
                "permalink": "/docs/category/further-improvements"
              },
              "next": {
                "title": "Error Handling",
                "permalink": "/docs/further-improvements/error-handling"
              }
            },
            {
              "unversionedId": "how-to-use-afms/example-scenarios",
              "id": "how-to-use-afms/example-scenarios",
              "title": "Example Scenarios",
              "description": "Scenario 1",
              "source": "@site/docs/how-to-use-afms/example-scenarios.md",
              "sourceDirName": "how-to-use-afms",
              "slug": "/how-to-use-afms/example-scenarios",
              "permalink": "/docs/how-to-use-afms/example-scenarios",
              "draft": false,
              "editUrl": "https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/how-to-use-afms/example-scenarios.md",
              "tags": [],
              "version": "current",
              "sidebarPosition": 5,
              "frontMatter": {
                "sidebar_position": 5
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Input Variables",
                "permalink": "/docs/how-to-use-afms/input-variables"
              },
              "next": {
                "title": "Added Features",
                "permalink": "/docs/category/added-features"
              }
            },
            {
              "unversionedId": "how-to-use-afms/format-of-hub-files",
              "id": "how-to-use-afms/format-of-hub-files",
              "title": "Format of Hub Files",
              "description": "Macro Hub Distribution",
              "source": "@site/docs/how-to-use-afms/format-of-hub-files.md",
              "sourceDirName": "how-to-use-afms",
              "slug": "/how-to-use-afms/format-of-hub-files",
              "permalink": "/docs/how-to-use-afms/format-of-hub-files",
              "draft": false,
              "editUrl": "https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/how-to-use-afms/format-of-hub-files.md",
              "tags": [],
              "version": "current",
              "sidebarPosition": 2,
              "frontMatter": {
                "sidebar_position": 2
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Introduction",
                "permalink": "/docs/how-to-use-afms/introduction"
              },
              "next": {
                "title": "Format of Supporting Files",
                "permalink": "/docs/how-to-use-afms/format-of-supporting-files"
              }
            },
            {
              "unversionedId": "how-to-use-afms/format-of-supporting-files",
              "id": "how-to-use-afms/format-of-supporting-files",
              "title": "Format of Supporting Files",
              "description": "Physical Node",
              "source": "@site/docs/how-to-use-afms/format-of-supporting-files.md",
              "sourceDirName": "how-to-use-afms",
              "slug": "/how-to-use-afms/format-of-supporting-files",
              "permalink": "/docs/how-to-use-afms/format-of-supporting-files",
              "draft": false,
              "editUrl": "https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/how-to-use-afms/format-of-supporting-files.md",
              "tags": [],
              "version": "current",
              "sidebarPosition": 3,
              "frontMatter": {
                "sidebar_position": 3
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Format of Hub Files",
                "permalink": "/docs/how-to-use-afms/format-of-hub-files"
              },
              "next": {
                "title": "Input Variables",
                "permalink": "/docs/how-to-use-afms/input-variables"
              }
            },
            {
              "unversionedId": "how-to-use-afms/input-variables",
              "id": "how-to-use-afms/input-variables",
              "title": "Input Variables",
              "description": "| name                 | description                                                                                               | remarks                                                                                                                             |            |",
              "source": "@site/docs/how-to-use-afms/input-variables.md",
              "sourceDirName": "how-to-use-afms",
              "slug": "/how-to-use-afms/input-variables",
              "permalink": "/docs/how-to-use-afms/input-variables",
              "draft": false,
              "editUrl": "https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/how-to-use-afms/input-variables.md",
              "tags": [],
              "version": "current",
              "sidebarPosition": 4,
              "frontMatter": {
                "sidebar_position": 4
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Format of Supporting Files",
                "permalink": "/docs/how-to-use-afms/format-of-supporting-files"
              },
              "next": {
                "title": "Example Scenarios",
                "permalink": "/docs/how-to-use-afms/example-scenarios"
              }
            },
            {
              "unversionedId": "how-to-use-afms/introduction",
              "id": "how-to-use-afms/introduction",
              "title": "Introduction",
              "description": "Widget",
              "source": "@site/docs/how-to-use-afms/introduction.md",
              "sourceDirName": "how-to-use-afms",
              "slug": "/how-to-use-afms/introduction",
              "permalink": "/docs/how-to-use-afms/introduction",
              "draft": false,
              "editUrl": "https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/how-to-use-afms/introduction.md",
              "tags": [],
              "version": "current",
              "sidebarPosition": 1,
              "frontMatter": {
                "sidebar_position": 1
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "How to Use AFMS",
                "permalink": "/docs/category/how-to-use-afms"
              },
              "next": {
                "title": "Format of Hub Files",
                "permalink": "/docs/how-to-use-afms/format-of-hub-files"
              }
            },
            {
              "unversionedId": "mso/data-extraction",
              "id": "mso/data-extraction",
              "title": "Data Extraction",
              "description": "Overview",
              "source": "@site/docs/mso/data-extraction.md",
              "sourceDirName": "mso",
              "slug": "/mso/data-extraction",
              "permalink": "/docs/mso/data-extraction",
              "draft": false,
              "editUrl": "https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/mso/data-extraction.md",
              "tags": [],
              "version": "current",
              "sidebarPosition": 3,
              "frontMatter": {
                "sidebar_position": 3
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Sandbox",
                "permalink": "/docs/mso/sandbox"
              },
              "next": {
                "title": "Model Setup",
                "permalink": "/docs/mso/model-setup"
              }
            },
            {
              "unversionedId": "mso/few-shot",
              "id": "mso/few-shot",
              "title": "Implementing Few-Shot",
              "description": "Overview",
              "source": "@site/docs/mso/few-shot.md",
              "sourceDirName": "mso",
              "slug": "/mso/few-shot",
              "permalink": "/docs/mso/few-shot",
              "draft": false,
              "editUrl": "https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/mso/few-shot.md",
              "tags": [],
              "version": "current",
              "sidebarPosition": 5,
              "frontMatter": {
                "sidebar_position": 5
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Model Setup",
                "permalink": "/docs/mso/model-setup"
              },
              "next": {
                "title": "Complete Source Codes",
                "permalink": "/docs/mso/source-codes"
              }
            },
            {
              "unversionedId": "mso/introduction",
              "id": "mso/introduction",
              "title": "Introduction",
              "description": "NLI-based Zero Shot Text Classification",
              "source": "@site/docs/mso/introduction.md",
              "sourceDirName": "mso",
              "slug": "/mso/introduction",
              "permalink": "/docs/mso/introduction",
              "draft": false,
              "editUrl": "https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/mso/introduction.md",
              "tags": [],
              "version": "current",
              "sidebarPosition": 1,
              "frontMatter": {
                "sidebar_position": 1
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "MSO: Text Classification",
                "permalink": "/docs/category/mso-text-classification"
              },
              "next": {
                "title": "Sandbox",
                "permalink": "/docs/mso/sandbox"
              }
            },
            {
              "unversionedId": "mso/model-setup",
              "id": "mso/model-setup",
              "title": "Model Setup",
              "description": "Overview",
              "source": "@site/docs/mso/model-setup.md",
              "sourceDirName": "mso",
              "slug": "/mso/model-setup",
              "permalink": "/docs/mso/model-setup",
              "draft": false,
              "editUrl": "https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/mso/model-setup.md",
              "tags": [],
              "version": "current",
              "sidebarPosition": 4,
              "frontMatter": {
                "sidebar_position": 4
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Data Extraction",
                "permalink": "/docs/mso/data-extraction"
              },
              "next": {
                "title": "Implementing Few-Shot",
                "permalink": "/docs/mso/few-shot"
              }
            },
            {
              "unversionedId": "mso/sandbox",
              "id": "mso/sandbox",
              "title": "Sandbox",
              "description": "Explore the power of zero-shot classification with this interactive demo using the Facebook BART-large MNLI model, hosted on a Gradio space. This user-friendly interface allows you to input your own text and candidate labels to see how the model classifies the text based on your provided categories. The model is highly versatile and can be used for a wide range of applications, including topic categorization, sentiment analysis, and more.",
              "source": "@site/docs/mso/sandbox.md",
              "sourceDirName": "mso",
              "slug": "/mso/sandbox",
              "permalink": "/docs/mso/sandbox",
              "draft": false,
              "editUrl": "https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/mso/sandbox.md",
              "tags": [],
              "version": "current",
              "sidebarPosition": 2,
              "frontMatter": {
                "sidebar_position": 2
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Introduction",
                "permalink": "/docs/mso/introduction"
              },
              "next": {
                "title": "Data Extraction",
                "permalink": "/docs/mso/data-extraction"
              }
            },
            {
              "unversionedId": "mso/source-codes",
              "id": "mso/source-codes",
              "title": "Complete Source Codes",
              "description": "Zero-Shot",
              "source": "@site/docs/mso/source-codes.md",
              "sourceDirName": "mso",
              "slug": "/mso/source-codes",
              "permalink": "/docs/mso/source-codes",
              "draft": false,
              "editUrl": "https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/mso/source-codes.md",
              "tags": [],
              "version": "current",
              "sidebarPosition": 6,
              "frontMatter": {
                "sidebar_position": 6
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Implementing Few-Shot",
                "permalink": "/docs/mso/few-shot"
              }
            },
            {
              "unversionedId": "quickstart/background",
              "id": "quickstart/background",
              "title": "Background",
              "description": "There are two main components implemented.",
              "source": "@site/docs/quickstart/background.md",
              "sourceDirName": "quickstart",
              "slug": "/quickstart/background",
              "permalink": "/docs/quickstart/background",
              "draft": false,
              "editUrl": "https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/quickstart/background.md",
              "tags": [],
              "version": "current",
              "sidebarPosition": 1,
              "frontMatter": {
                "sidebar_position": 1
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Quickstart",
                "permalink": "/docs/category/quickstart"
              },
              "next": {
                "title": "Local Machine Setup",
                "permalink": "/docs/quickstart/local-machine-setup"
              }
            },
            {
              "unversionedId": "quickstart/docker-setup",
              "id": "quickstart/docker-setup",
              "title": "Docker Setup",
              "description": "If you wish to use the pre-built images, follow the steps below. You can either do it via Docker Compose or run two images separately.",
              "source": "@site/docs/quickstart/docker-setup.md",
              "sourceDirName": "quickstart",
              "slug": "/quickstart/docker-setup",
              "permalink": "/docs/quickstart/docker-setup",
              "draft": false,
              "editUrl": "https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/quickstart/docker-setup.md",
              "tags": [],
              "version": "current",
              "sidebarPosition": 3,
              "frontMatter": {
                "sidebar_position": 3
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Local Machine Setup",
                "permalink": "/docs/quickstart/local-machine-setup"
              },
              "next": {
                "title": "Setting Up Docker",
                "permalink": "/docs/category/setting-up-docker"
              }
            },
            {
              "unversionedId": "quickstart/local-machine-setup",
              "id": "quickstart/local-machine-setup",
              "title": "Local Machine Setup",
              "description": "Let's setup the tool for usage.",
              "source": "@site/docs/quickstart/local-machine-setup.md",
              "sourceDirName": "quickstart",
              "slug": "/quickstart/local-machine-setup",
              "permalink": "/docs/quickstart/local-machine-setup",
              "draft": false,
              "editUrl": "https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/quickstart/local-machine-setup.md",
              "tags": [],
              "version": "current",
              "sidebarPosition": 2,
              "frontMatter": {
                "sidebar_position": 2
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Background",
                "permalink": "/docs/quickstart/background"
              },
              "next": {
                "title": "Docker Setup",
                "permalink": "/docs/quickstart/docker-setup"
              }
            },
            {
              "unversionedId": "setting-up-docker/building-docker-images",
              "id": "setting-up-docker/building-docker-images",
              "title": "Building Docker Images",
              "description": "Once you have created the Dockerfiles, you can build the Docker images.",
              "source": "@site/docs/setting-up-docker/building-docker-images.md",
              "sourceDirName": "setting-up-docker",
              "slug": "/setting-up-docker/building-docker-images",
              "permalink": "/docs/setting-up-docker/building-docker-images",
              "draft": false,
              "editUrl": "https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/setting-up-docker/building-docker-images.md",
              "tags": [],
              "version": "current",
              "sidebarPosition": 2,
              "frontMatter": {
                "sidebar_position": 2
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Creating Dockerfiles",
                "permalink": "/docs/setting-up-docker/creating-dockerfiles"
              },
              "next": {
                "title": "Pushing to DockerHub",
                "permalink": "/docs/setting-up-docker/pushing-to-dockerhub"
              }
            },
            {
              "unversionedId": "setting-up-docker/creating-dockerfiles",
              "id": "setting-up-docker/creating-dockerfiles",
              "title": "Creating Dockerfiles",
              "description": "Front-End Dockerfile",
              "source": "@site/docs/setting-up-docker/creating-dockerfiles.md",
              "sourceDirName": "setting-up-docker",
              "slug": "/setting-up-docker/creating-dockerfiles",
              "permalink": "/docs/setting-up-docker/creating-dockerfiles",
              "draft": false,
              "editUrl": "https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/setting-up-docker/creating-dockerfiles.md",
              "tags": [],
              "version": "current",
              "sidebarPosition": 1,
              "frontMatter": {
                "sidebar_position": 1
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Setting Up Docker",
                "permalink": "/docs/category/setting-up-docker"
              },
              "next": {
                "title": "Building Docker Images",
                "permalink": "/docs/setting-up-docker/building-docker-images"
              }
            },
            {
              "unversionedId": "setting-up-docker/deploying-containers",
              "id": "setting-up-docker/deploying-containers",
              "title": "Deploying Containers",
              "description": "Docker Run",
              "source": "@site/docs/setting-up-docker/deploying-containers.md",
              "sourceDirName": "setting-up-docker",
              "slug": "/setting-up-docker/deploying-containers",
              "permalink": "/docs/setting-up-docker/deploying-containers",
              "draft": false,
              "editUrl": "https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/setting-up-docker/deploying-containers.md",
              "tags": [],
              "version": "current",
              "sidebarPosition": 6,
              "frontMatter": {
                "sidebar_position": 6
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Pulling from DockerHub",
                "permalink": "/docs/setting-up-docker/pulling-from-dockerhub"
              },
              "next": {
                "title": "How to Use AFMS",
                "permalink": "/docs/category/how-to-use-afms"
              }
            },
            {
              "unversionedId": "setting-up-docker/exporting-docker-images",
              "id": "setting-up-docker/exporting-docker-images",
              "title": "Exporting Docker Images",
              "description": "Retrieve Image Name",
              "source": "@site/docs/setting-up-docker/exporting-docker-images.md",
              "sourceDirName": "setting-up-docker",
              "slug": "/setting-up-docker/exporting-docker-images",
              "permalink": "/docs/setting-up-docker/exporting-docker-images",
              "draft": false,
              "editUrl": "https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/setting-up-docker/exporting-docker-images.md",
              "tags": [],
              "version": "current",
              "sidebarPosition": 4,
              "frontMatter": {
                "sidebar_position": 4
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Pushing to DockerHub",
                "permalink": "/docs/setting-up-docker/pushing-to-dockerhub"
              },
              "next": {
                "title": "Pulling from DockerHub",
                "permalink": "/docs/setting-up-docker/pulling-from-dockerhub"
              }
            },
            {
              "unversionedId": "setting-up-docker/pulling-from-dockerhub",
              "id": "setting-up-docker/pulling-from-dockerhub",
              "title": "Pulling from DockerHub",
              "description": "Pulling Latest Images",
              "source": "@site/docs/setting-up-docker/pulling-from-dockerhub.md",
              "sourceDirName": "setting-up-docker",
              "slug": "/setting-up-docker/pulling-from-dockerhub",
              "permalink": "/docs/setting-up-docker/pulling-from-dockerhub",
              "draft": false,
              "editUrl": "https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/setting-up-docker/pulling-from-dockerhub.md",
              "tags": [],
              "version": "current",
              "sidebarPosition": 5,
              "frontMatter": {
                "sidebar_position": 5
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Exporting Docker Images",
                "permalink": "/docs/setting-up-docker/exporting-docker-images"
              },
              "next": {
                "title": "Deploying Containers",
                "permalink": "/docs/setting-up-docker/deploying-containers"
              }
            },
            {
              "unversionedId": "setting-up-docker/pushing-to-dockerhub",
              "id": "setting-up-docker/pushing-to-dockerhub",
              "title": "Pushing to DockerHub",
              "description": "Retrieve Image ID",
              "source": "@site/docs/setting-up-docker/pushing-to-dockerhub.md",
              "sourceDirName": "setting-up-docker",
              "slug": "/setting-up-docker/pushing-to-dockerhub",
              "permalink": "/docs/setting-up-docker/pushing-to-dockerhub",
              "draft": false,
              "editUrl": "https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/setting-up-docker/pushing-to-dockerhub.md",
              "tags": [],
              "version": "current",
              "sidebarPosition": 3,
              "frontMatter": {
                "sidebar_position": 3
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Building Docker Images",
                "permalink": "/docs/setting-up-docker/building-docker-images"
              },
              "next": {
                "title": "Exporting Docker Images",
                "permalink": "/docs/setting-up-docker/exporting-docker-images"
              }
            }
          ],
          "drafts": [],
          "sidebars": {
            "tutorialSidebar": [
              {
                "type": "category",
                "label": "Quickstart",
                "collapsible": true,
                "collapsed": true,
                "items": [
                  {
                    "type": "doc",
                    "id": "quickstart/background"
                  },
                  {
                    "type": "doc",
                    "id": "quickstart/local-machine-setup"
                  },
                  {
                    "type": "doc",
                    "id": "quickstart/docker-setup"
                  }
                ],
                "link": {
                  "type": "generated-index",
                  "description": "Quickstart guide for the AFMS Project.",
                  "slug": "/category/quickstart",
                  "permalink": "/docs/category/quickstart"
                }
              },
              {
                "type": "category",
                "label": "Setting Up Docker",
                "collapsible": true,
                "collapsed": true,
                "items": [
                  {
                    "type": "doc",
                    "id": "setting-up-docker/creating-dockerfiles"
                  },
                  {
                    "type": "doc",
                    "id": "setting-up-docker/building-docker-images"
                  },
                  {
                    "type": "doc",
                    "id": "setting-up-docker/pushing-to-dockerhub"
                  },
                  {
                    "type": "doc",
                    "id": "setting-up-docker/exporting-docker-images"
                  },
                  {
                    "type": "doc",
                    "id": "setting-up-docker/pulling-from-dockerhub"
                  },
                  {
                    "type": "doc",
                    "id": "setting-up-docker/deploying-containers"
                  }
                ],
                "link": {
                  "type": "generated-index",
                  "description": "Setting Up Docker for the AFMS Project",
                  "slug": "/category/setting-up-docker",
                  "permalink": "/docs/category/setting-up-docker"
                }
              },
              {
                "type": "category",
                "label": "How to Use AFMS",
                "collapsible": true,
                "collapsed": true,
                "items": [
                  {
                    "type": "doc",
                    "id": "how-to-use-afms/introduction"
                  },
                  {
                    "type": "doc",
                    "id": "how-to-use-afms/format-of-hub-files"
                  },
                  {
                    "type": "doc",
                    "id": "how-to-use-afms/format-of-supporting-files"
                  },
                  {
                    "type": "doc",
                    "id": "how-to-use-afms/input-variables"
                  },
                  {
                    "type": "doc",
                    "id": "how-to-use-afms/example-scenarios"
                  }
                ],
                "link": {
                  "type": "generated-index",
                  "description": "Features added to the existing AFMS Project.",
                  "slug": "/category/how-to-use-afms",
                  "permalink": "/docs/category/how-to-use-afms"
                }
              },
              {
                "type": "category",
                "label": "Added Features",
                "collapsible": true,
                "collapsed": true,
                "items": [
                  {
                    "type": "doc",
                    "id": "added-features/downloading-result-files"
                  }
                ],
                "link": {
                  "type": "generated-index",
                  "description": "Features added to the existing AFMS Project.",
                  "slug": "/category/added-features",
                  "permalink": "/docs/category/added-features"
                }
              },
              {
                "type": "category",
                "label": "Further Improvements",
                "collapsible": true,
                "collapsed": true,
                "items": [
                  {
                    "type": "doc",
                    "id": "further-improvements/vulnerabilities"
                  },
                  {
                    "type": "doc",
                    "id": "further-improvements/error-handling"
                  }
                ],
                "link": {
                  "type": "generated-index",
                  "description": "Possible further improvements for the AFMS Project.",
                  "slug": "/category/further-improvements",
                  "permalink": "/docs/category/further-improvements"
                }
              },
              {
                "type": "category",
                "label": "MSO: Text Classification",
                "collapsible": true,
                "collapsed": true,
                "items": [
                  {
                    "type": "doc",
                    "id": "mso/introduction"
                  },
                  {
                    "type": "doc",
                    "id": "mso/sandbox"
                  },
                  {
                    "type": "doc",
                    "id": "mso/data-extraction"
                  },
                  {
                    "type": "doc",
                    "id": "mso/model-setup"
                  },
                  {
                    "type": "doc",
                    "id": "mso/few-shot"
                  },
                  {
                    "type": "doc",
                    "id": "mso/source-codes"
                  }
                ],
                "link": {
                  "type": "generated-index",
                  "description": "Documentation for additional project done on MSO Data.",
                  "slug": "/category/mso-text-classification",
                  "permalink": "/docs/category/mso-text-classification"
                }
              }
            ]
          }
        }
      ]
    }
  },
  "docusaurus-plugin-content-blog": {
    "default": {
      "blogSidebarTitle": "Recent posts",
      "blogPosts": [
        {
          "id": "using-flask-to-zip-and-download-files-part-1",
          "metadata": {
            "permalink": "/blog/using-flask-to-zip-and-download-files-part-1",
            "editUrl": "https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2023-03-01-using-flask-to-zip-and-download-files-part-1.md",
            "source": "@site/blog/2023-03-01-using-flask-to-zip-and-download-files-part-1.md",
            "title": "Using Flask to Zip and Download Files (Part 1)",
            "description": "Downloading Packages",
            "date": "2023-03-01T00:00:00.000Z",
            "formattedDate": "March 1, 2023",
            "tags": [
              {
                "label": "tutorial",
                "permalink": "/blog/tags/tutorial"
              }
            ],
            "readingTime": 2.005,
            "hasTruncateMarker": false,
            "authors": [
              {
                "name": "Eldora Boo",
                "title": "Data Engineer of AFMS Project",
                "url": "https://github.com/eldoraboo",
                "imageURL": "https://github.com/eldoraboo.png",
                "key": "eldoraboo"
              }
            ],
            "frontMatter": {
              "slug": "using-flask-to-zip-and-download-files-part-1",
              "title": "Using Flask to Zip and Download Files (Part 1)",
              "authors": [
                "eldoraboo"
              ],
              "tags": [
                "tutorial"
              ]
            },
            "nextItem": {
              "title": "Using Flask to Zip and Download Files (Part 2)",
              "permalink": "/blog/using-flask-to-zip-and-download-files-part-2"
            }
          },
          "content": "### Downloading Packages\n\nTo begin, we will import the necessary modules. We will use the os module to navigate the file system, zipfile to create our zip file, BytesIO to store our zip file in memory, Flask to create our web application, and send_file to send our zip file to the user.\n\n```py title=\"app.py\" withLineNumbers\nimport os\nimport zipfile\nfrom io import BytesIO\nfrom flask import Flask, jsonify, send_file, request\nfrom flask_cors import CORS\n```\n\n### Enabling CORS\n\nNext, we will create our Flask application and enable Cross-Origin Resource Sharing (CORS). CORS is a mechanism that allows many resources (e.g., fonts, JavaScript, etc.) on a web page to be requested from another domain outside the domain from which the resource originated.\n\n```py title=\"app.py\" withLineNumbers\napp = Flask(__name__)\nCORS(app)\n```\n\n### Creating a route for file download\n\nWe will create a route for our file download service. The route will expect a parameter called 'fileName', which is the name of the file that we want to download. We will then use os.walk to iterate through all the files and directories in the file path and add them to our zip file using zipfile.ZipFile.write. Finally, we will use send_file to send our zip file to the user.\n\n```py title=\"app.py\" withLineNumbers\n@app.route('/file')\ndef zipped_data():\n    fileName = request.args.get('fileName')\n    file_path = '{}/'.format(fileName)\n    fileName = \"{}.zip\".format(fileName)\n    memory_file = BytesIO()\n    with zipfile.ZipFile(memory_file, 'w', zipfile.ZIP_DEFLATED) as zipf:\n        for root, dirs, files in os.walk(file_path):\n            for file in files:\n                zipf.write(os.path.join(root, file))\n    memory_file.seek(0)\n    return send_file(memory_file,\n                     attachment_filename=fileName,\n                     as_attachment=True)\n```\n\n### Add rendering and caching\n\nWe will add a function using the Flask after_request decorator to add headers to our response. These headers will ensure that the user's browser renders the web page correctly and caches the page for 10 minutes.\n\n```py title=\"app.py\" withLineNumbers\n@app.after_request\ndef add_header(response):\n    \"\"\"\n    Add headers to both force latest IE rendering engine or Chrome Frame,\n    and also to cache the rendered page for 10 minutes.\n    \"\"\"\n    response.headers['X-UA-Compatible'] = 'IE=Edge,chrome=1'\n    response.headers['Cache-Control'] = 'public, max-age=0'\n    return response\n```\n\n### Running the application\n\n```py title=\"app.py\" withLineNumbers\napp.run(debug=True,host=\"0.0.0.0\",port=8000)\n```\n\n### Accessing the GET request\n\nNow that we have our Flask application set up, we can use it to zip and download files. To use the service, we will send a GET request to our endpoint.\n\n```shell Terminal\nhttp://localhost:8000/file\n```\n\nThe user's browser will prompt them to download the zip file. Read the next article to see how we link this to frontend interface."
        },
        {
          "id": "using-flask-to-zip-and-download-files-part-2",
          "metadata": {
            "permalink": "/blog/using-flask-to-zip-and-download-files-part-2",
            "editUrl": "https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2023-03-01-using-flask-to-zip-and-download-files-part-2.md",
            "source": "@site/blog/2023-03-01-using-flask-to-zip-and-download-files-part-2.md",
            "title": "Using Flask to Zip and Download Files (Part 2)",
            "description": "Passing apiUrl as a prop",
            "date": "2023-03-01T00:00:00.000Z",
            "formattedDate": "March 1, 2023",
            "tags": [
              {
                "label": "tutorial",
                "permalink": "/blog/tags/tutorial"
              }
            ],
            "readingTime": 1.07,
            "hasTruncateMarker": false,
            "authors": [
              {
                "name": "Eldora Boo",
                "title": "Data Engineer of AFMS Project",
                "url": "https://github.com/eldoraboo",
                "imageURL": "https://github.com/eldoraboo.png",
                "key": "eldoraboo"
              }
            ],
            "frontMatter": {
              "slug": "using-flask-to-zip-and-download-files-part-2",
              "title": "Using Flask to Zip and Download Files (Part 2)",
              "authors": [
                "eldoraboo"
              ],
              "tags": [
                "tutorial"
              ]
            },
            "prevItem": {
              "title": "Using Flask to Zip and Download Files (Part 1)",
              "permalink": "/blog/using-flask-to-zip-and-download-files-part-1"
            },
            "nextItem": {
              "title": "Setting Up Docker To Connect Client and Server",
              "permalink": "/blog/setting-up-docker-to-connect-client-and-server"
            }
          },
          "content": "### Passing apiUrl as a prop\n\nTo begin, we will pass the apiUrl as a prop, it is defined as ```/file``` in the previous post. We also set a variable to keep track of the filename.\n\n```js title=\"App.js\" withLineNumbers\nimport * as React from \"react\";\n\nfunction App({ apiUrl }) {\n    const [fileName, setFileName] = React.useState(\"\");\n}\nexport default App;\n````\n\n### Download Action\n\nWith both ```apiUrl``` and ```fileName``` we are able to send a request to the Flask API.\n\n```js title=\"App.js\" withLineNumbers\nfunction App({ apiUrl }) {\n    const [fileName, setFileName] = React.useState(\"\");\n    React.useEffect(() => {\n        const downloadButton = document.getElementById(\"downloadButton\");\n        if (downloadButton) {\n        downloadButton.addEventListener(\"click\", () => {\n            fetch(`${apiUrl}/file?fileName=${fileName}`)\n                .then((response) => response.blob())\n                .then((blob) => {\n                    const url = window.URL.createObjectURL(blob);\n                    const a = document.createElement(\"a\");\n                    a.href = url;\n                    a.download = `${fileName}.zip`;\n                    a.click();\n                })\n                .catch((error) => {\n                    console.error(error);\n                });\n            });\n        }\n    }, [apiUrl, fileName]);\n}\nexport default App;\n````\n\n### Frontend UI for TextField and Button\n\nTo retrieve our file name and activate the download. We will make a text field and button for the frontend.\n\n```js title=\"App.js\" withLineNumbers\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <Stack direction=\"row\" spacing={2}>\n          <TextField\n          id=\"filled-basic\"\n          label=\"File Name\"\n          variant=\"filled\"\n          value={fileName}\n          onChange={(e) => setFileName(e.target.value)}\n        />\n          <Button variant=\"outlined\" id=\"downloadButton\">\n          Download Data\n          </Button>\n        </Stack>\n        {userData && <UserData data={userData} />}\n      </header>\n    </div>\n  );\n````"
        },
        {
          "id": "setting-up-docker-to-connect-client-and-server",
          "metadata": {
            "permalink": "/blog/setting-up-docker-to-connect-client-and-server",
            "editUrl": "https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2023-02-17-setting-up-docker-to-connect-client-and-server.md",
            "source": "@site/blog/2023-02-17-setting-up-docker-to-connect-client-and-server.md",
            "title": "Setting Up Docker To Connect Client and Server",
            "description": "Prerequisities",
            "date": "2023-02-17T00:00:00.000Z",
            "formattedDate": "February 17, 2023",
            "tags": [
              {
                "label": "tutorial",
                "permalink": "/blog/tags/tutorial"
              }
            ],
            "readingTime": 2.825,
            "hasTruncateMarker": false,
            "authors": [
              {
                "name": "Eldora Boo",
                "title": "Data Engineer of AFMS Project",
                "url": "https://github.com/eldoraboo",
                "imageURL": "https://github.com/eldoraboo.png",
                "key": "eldoraboo"
              }
            ],
            "frontMatter": {
              "slug": "setting-up-docker-to-connect-client-and-server",
              "title": "Setting Up Docker To Connect Client and Server",
              "authors": [
                "eldoraboo"
              ],
              "tags": [
                "tutorial"
              ]
            },
            "prevItem": {
              "title": "Using Flask to Zip and Download Files (Part 2)",
              "permalink": "/blog/using-flask-to-zip-and-download-files-part-2"
            },
            "nextItem": {
              "title": "Set Up Backend Server (Python) on Docker",
              "permalink": "/blog/set-up-backend-server-python-on-docker"
            }
          },
          "content": "### Prerequisities\n\nThis article assumes we already have these two Dockerfiles in their respective folders.\n\n```shell title=\"afms > Dockerfile\" withLineNumbers\n# Stage 1 - the build process\nFROM node:12-alpine as build-deps\nWORKDIR /usr/src/app\nCOPY package.json yarn.lock ./\nRUN apk add --no-cache autoconf\nRUN yarn\nCOPY . ./\nRUN yarn build\n\n# Stage 2 - the production environment\nFROM nginx:1.21-alpine\nCOPY --from=build-deps /usr/src/app/dist /usr/share/nginx/html\nEXPOSE 443\nCMD [\"nginx\", \"-g\", \"daemon off;\"]\n```\n\n<br/>\n\n```shell title=\"optimiser > Dockerfile\" withLineNumbers\n# Stage 1 - installing dependencies\nFROM continuumio/miniconda3:latest\nWORKDIR /app\nCOPY *.py .\nCOPY requirements.txt .\nRUN pip install -r requirements.txt\nRUN apt-get update && apt-get install -y \\\n    build-essential \\\n    libgl1-mesa-glx \\\n    libglib2.0-0 \\\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/*\n\n# Stage 2 - conda & pip set up\nRUN pip install flask flask_cors\nCOPY environment.yml .\nRUN conda config --set channel_priority strict\nRUN conda create -n opt python=3.9\nRUN /bin/bash -c \"source activate opt\"\nRUN conda install -c conda-forge scip\nRUN conda install -c conda-forge pyscipopt\nRUN conda install -c conda-forge geopandas\nRUN conda install -c conda-forge pyproj\n\n# Stage 3 - activate script\nCOPY server.py .\nEXPOSE 5000\nSHELL [\"conda\", \"run\", \"-n\", \"opt\" \"/bin/bash\", \"-c\"]\nCMD [\"python\", \"server.py\"]\n```\n\n### Step 1: Open `afms > dist > app.js`\n\n`Ctrl + F` to look for `127.0.0.1`, then replace it with `172.17.0.1`\n\n### Step 2: Open `optimiser > server.py`\n\n`Ctrl + F` to look for `app.run()`, then add `host=\"0.0.0.0\"` and `port=5000` to the arguments\n\n### Step 3: Build the Docker Images\n\nOnce you have created the Dockerfiles and setup the files accordingly, we will build the images.\n\n```shell Terminal\ncd afms\ndocker build . -t client-frontend\n# Estimated runtime: 20 seconds\n```\n\nEnsure that you are in the correct folders when building the images\n\n```shell Terminal\ncd optimiser\ndocker build . -t server-backend\n# Estimated runtime: 4000 seconds\n```\n\n### Step 4: Run the Docker Containers\n\nOnce the Docker images has been built, you can use the following commands to run the Docker containers:\n\n```shell Terminal\ndocker run -d -p 443:80 client-frontend\n```\n\nWe will expose port 443 on the host.\n\n```shell Terminal\ndocker run -d -p 5000:5000 server-backend\n```\n\n### Step 5: Check the Running Containers\n\nTo check the running containers, you can use the following command:\n\n```shell Terminal\ndocker ps -a\n```\n\n### Step 6: Access the client/server\n\nTo access the client, visit `localhost:443`.\nTo access the server, visit `localhost:5000`.\n\n### Step 7: Check the Docker Logs\n\nIf you encounter any issues, you can check the Docker logs to see what might be causing the problem. Use the following command to view the logs:\n\n```shell Terminal\ndocker logs <container_id>\n```\n\nReplace `<container_id>` with the actual ID of the container you want to view the logs for.\n\n### Step 8: Stop the Docker Containers\n\nWhen you’re done, you can stop the Docker containers using the following command:\n\n```shell Terminal\ndocker stop <container_id>\n```\n\nReplace `<container_id>` with the actual ID of the container you want to view the logs for.\n\n### Final Words\n\nIn case the port 3000 is already in use, you can use the following command to check which processes are involved:\n\n```shell Terminal\nsudo lsof -i -P -n | grep 3000\n```\n\nLastly, to kill the process involved, use the following command:\n\n```shell Terminal\nkill -9 <pid>\n```\n\nReplace `<pid>` with the actual process ID of the process you want to kill."
        },
        {
          "id": "set-up-backend-server-python-on-docker",
          "metadata": {
            "permalink": "/blog/set-up-backend-server-python-on-docker",
            "editUrl": "https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2023-02-08-set-up-backend-server-python-on-docker.md",
            "source": "@site/blog/2023-02-08-set-up-backend-server-python-on-docker.md",
            "title": "Set Up Backend Server (Python) on Docker",
            "description": "Prerequisities",
            "date": "2023-02-08T00:00:00.000Z",
            "formattedDate": "February 8, 2023",
            "tags": [
              {
                "label": "tutorial",
                "permalink": "/blog/tags/tutorial"
              }
            ],
            "readingTime": 2.98,
            "hasTruncateMarker": false,
            "authors": [
              {
                "name": "Eldora Boo",
                "title": "Data Engineer of AFMS Project",
                "url": "https://github.com/eldoraboo",
                "imageURL": "https://github.com/eldoraboo.png",
                "key": "eldoraboo"
              }
            ],
            "frontMatter": {
              "slug": "set-up-backend-server-python-on-docker",
              "title": "Set Up Backend Server (Python) on Docker",
              "authors": [
                "eldoraboo"
              ],
              "tags": [
                "tutorial"
              ]
            },
            "prevItem": {
              "title": "Setting Up Docker To Connect Client and Server",
              "permalink": "/blog/setting-up-docker-to-connect-client-and-server"
            },
            "nextItem": {
              "title": "Set Up Frontend Client (JavaScript) on Docker",
              "permalink": "/blog/set-up-frontend-client-java-script-on-docker"
            }
          },
          "content": "### Prerequisities\nThis article assumes we already have these two files in the directory.\n\n```python title=app.py withLineNumbers\nimport json\nfrom flask import Flask\napp = Flask(__name__)\n\n@app.route('/')\ndef index():\n    return json.dumps({'message': 'Welcome to Flask!'})\napp.run(debug=True,host=\"0.0.0.0\",port=3000)\n```\n\n<br/>\n\n```text title=requirements.txt withLineNumbers\nflask\n```\n\n\n### Step 1: Open Docker Desktop\nTo get started with Docker, you need to have Docker Desktop installed on your machine. If you haven’t already, download and install it from the official website. Once installed, open Docker Desktop and make sure that it is running.\n\n### Step 2: Create a Dockerfile\nA `Dockerfile` is a script that contains all the instructions required to build a Docker image. In our case, we want to build an image for a Flask REST API. To do this, we’ll need to include the following components in our Dockerfile:\n1. The base image (e.g. `alpine`)\n2. The required dependencies (e.g., Flask and its dependencies)\n3. The code for the Flask REST API\n\nHere’s an example of a simple `Dockerfile` for a Flask REST API:\n\n```shell title=Dockerfile withLineNumbers\nFROM alpine:latest\nRUN apk update\nRUN apk add py-pip\nRUN apk add --no-cache python3-dev \nRUN pip install --upgrade pip\nWORKDIR /app\nCOPY . /app\nRUN pip --no-cache-dir install -r requirements.txt\nCMD [\"python3\", \"app.py\"]\n```\n\nIn this example, we’re using the `alpine` image as the base image and installing the required dependencies using `pip install`. We’re also copying the code for the Flask REST API to the working directory and setting the environment variable for Flask.\n\n### Step 3: Build the Docker Image\nOnce you have created the `Dockerfile`, you can use the following command to build the Docker image:\n\n```shell Terminal\ndocker build . -t server-backend\n```\n\nThe `docker build` command builds the Docker image using the instructions in the Dockerfile. The `.` argument specifies the location of the Dockerfile, and the `-t` argument specifies the name and tag of the image (in this case, `server-backend`).\n\n### Step 4: Run the Docker Container\nOnce the Docker image has been built, you can use the following command to run the Docker container:\n\n```shell Terminal\ndocker run -d -p 3000:3000 server-backend\n```\n\nThe `docker run` command runs the Docker container from the image. The `-d` argument specifies that the container should run in the background, and the `-p` argument maps port `3000` in the container to port `3000` on the host.\n\n### Step 5: Check the Running Containers\nTo check the running containers, you can use the following command:\n\n```shell Terminal\ndocker ps -a\n```\n\n\n### Step 6: Access the Flask REST API\nTo access the Flask REST API, visit `localhost:3000`\n\n### Step 7: Check the Docker Logs\nIf you encounter any issues, you can check the Docker logs to see what might be causing the problem. Use the following command to view the logs:\n\n```shell Terminal\ndocker logs <container_id>\n```\n\nReplace `<container_id>` with the actual ID of the container you want to view the logs for.\n\n### Step 8: Stop the Docker Container\nWhen you’re done, you can stop the Docker container using the following command:\n\n```shell Terminal\ndocker stop <container_id>\n```\n\nReplace `<container_id>` with the actual ID of the container you want to view the logs for.\n\n### Final Words\nIn case the port 3000 is already in use, you can use the following command to check which processes are involved:\n\n```shell Terminal\nsudo lsof -i -P -n | grep 3000\n```\n\nLastly, to kill the process involved, use the following command:\n\n```shell Terminal\nkill -9 <pid>\n```\n\nReplace `<pid>` with the actual process ID of the process you want to kill."
        },
        {
          "id": "set-up-frontend-client-java-script-on-docker",
          "metadata": {
            "permalink": "/blog/set-up-frontend-client-java-script-on-docker",
            "editUrl": "https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2023-02-08-set-up-frontend-client-java-script-on-docker.md",
            "source": "@site/blog/2023-02-08-set-up-frontend-client-java-script-on-docker.md",
            "title": "Set Up Frontend Client (JavaScript) on Docker",
            "description": "Prerequisities",
            "date": "2023-02-08T00:00:00.000Z",
            "formattedDate": "February 8, 2023",
            "tags": [
              {
                "label": "tutorial",
                "permalink": "/blog/tags/tutorial"
              }
            ],
            "readingTime": 2.995,
            "hasTruncateMarker": false,
            "authors": [
              {
                "name": "Eldora Boo",
                "title": "Data Engineer of AFMS Project",
                "url": "https://github.com/eldoraboo",
                "imageURL": "https://github.com/eldoraboo.png",
                "key": "eldoraboo"
              }
            ],
            "frontMatter": {
              "slug": "set-up-frontend-client-java-script-on-docker",
              "title": "Set Up Frontend Client (JavaScript) on Docker",
              "authors": [
                "eldoraboo"
              ],
              "tags": [
                "tutorial"
              ]
            },
            "prevItem": {
              "title": "Set Up Backend Server (Python) on Docker",
              "permalink": "/blog/set-up-backend-server-python-on-docker"
            }
          },
          "content": "### Prerequisities\n\nThis article assumes we already have started a `create-react-app` project.\n\n\n```shell Terminal \nnpx create-react-app client-frontend\ncd client-frontend\nnpm start\n```\n\n\n### Step 1: Open Docker Desktop\n\nTo get started with Docker, you need to have Docker Desktop installed on your machine. If you haven’t already, download and install it from the official website. Once installed, open Docker Desktop and make sure that it is running.\n\n### Step 2: Create a Dockerfile\n\nA `Dockerfile` is a script that contains all the instructions required to build a Docker image. In our case, we want to build an image for a Create React App. To do this, we’ll need to include the following components in our Dockerfile:\n\n1. The base image (e.g.`node:18-alpine`)\n2. The required dependencies (e.g., the Create React App dependencies)\n3. The code for the Create React App\n\nHere’s an example of a simple `Dockerfile` for a Create React App:\n\n\n```shell title=Dockerfile withLineNumbers\n# Stage 1\nFROM node:18-alpine as builder\nWORKDIR /app\nCOPY package.json .\nCOPY yarn.lock .\nRUN yarn install\nCOPY . .\nRUN yarn build\n\n# Stage 2\n\nFROM nginx:1.19.0\nWORKDIR /usr/share/nginx/html\nRUN rm -rf ./\\*\nCOPY --from=builder /app/build .\nENTRYPOINT [\"nginx\", \"-g\", \"daemon off;\"]\n\n````\n\nIn this example, we’re using the official Node image as the base image and installing the required dependencies using `npm install`. We’re also copying the code for the Create React App to the working directory and setting the environment variable for React.js. Make a `.dockerignore` file as well.\n\n```shell title=.dockerignore withLineNumbers\n/node_modules\n````\n\n\n\n### Step 3: Build the Docker Image\n\nOnce you have created the `Dockerfile`, you can use the following command to build the Docker image:\n\n\n```shell Terminal\ndocker build . -t client-frontend \n```\n\nThe `docker build` command builds the Docker image using the instructions in the\nDockerfile. The `.` argument specifies the location of the Dockerfile, and the `-t`\nargument specifies the name and tag of the image (in this case, `client-frontend`).\n\n### Step 4: Run the Docker Container\n\nOnce the Docker image has been built, you can use the following command to run the Docker container:\n\n\n```shell Terminal\ndocker run -d -p 8080:80 client-frontend\n```\n\nThe `docker run` command runs the Docker container from the image. The `-d` argument\nspecifies that the container should run in the background, and the `-p` argument\nmaps port `80` in the container to port `8080` on the host.\n\n### Step 5: Check the Running Containers\n\nTo check the running containers, you can use the following command:\n\n\n```shell Terminal\ndocker ps -a\n```\n\n\n### Step 6: Access the Create React App\n\nTo access the Create React App, visit `localhost:8080`\n\n### Step 7: Check the Docker Logs\n\nIf you encounter any issues, you can check the Docker logs to see what might be causing the problem. Use the following command to view the logs:\n\n\n```shell Terminal\ndocker logs <container_id>\n```\n\nReplace `<container_id>` with the actual ID of the container you want to view the logs for.\n\n### Step 8: Stop the Docker Container\n\nWhen you’re done, you can stop the Docker container using the following command:\n\n\n```shell Terminal\ndocker stop <container_id>\n```\n\nReplace `<container_id>` with the actual ID of the container you want to view the logs for.\n\n### Final Words\n\nIn case the port 8080 is already in use, you can use the following command to check which processes are involved:\n\n\n```shell Terminal\nsudo lsof -i -P -n | grep 8080\n```\n\nLastly, to kill the process involved, use the following command:\n\n```shell Terminal\nkill -9 <pid>\n```\n\nReplace `<pid>` with the actual process ID of the process you want to kill."
        }
      ],
      "blogListPaginated": [
        {
          "items": [
            "using-flask-to-zip-and-download-files-part-1",
            "using-flask-to-zip-and-download-files-part-2",
            "setting-up-docker-to-connect-client-and-server",
            "set-up-backend-server-python-on-docker",
            "set-up-frontend-client-java-script-on-docker"
          ],
          "metadata": {
            "permalink": "/blog",
            "page": 1,
            "postsPerPage": 10,
            "totalPages": 1,
            "totalCount": 5,
            "blogDescription": "Blog",
            "blogTitle": "Blog"
          }
        }
      ],
      "blogTags": {
        "/blog/tags/tutorial": {
          "label": "tutorial",
          "items": [
            "using-flask-to-zip-and-download-files-part-1",
            "using-flask-to-zip-and-download-files-part-2",
            "setting-up-docker-to-connect-client-and-server",
            "set-up-backend-server-python-on-docker",
            "set-up-frontend-client-java-script-on-docker"
          ],
          "permalink": "/blog/tags/tutorial",
          "pages": [
            {
              "items": [
                "using-flask-to-zip-and-download-files-part-1",
                "using-flask-to-zip-and-download-files-part-2",
                "setting-up-docker-to-connect-client-and-server",
                "set-up-backend-server-python-on-docker",
                "set-up-frontend-client-java-script-on-docker"
              ],
              "metadata": {
                "permalink": "/blog/tags/tutorial",
                "page": 1,
                "postsPerPage": 10,
                "totalPages": 1,
                "totalCount": 5,
                "blogDescription": "Blog",
                "blogTitle": "Blog"
              }
            }
          ]
        }
      },
      "blogTagsListPath": "/blog/tags"
    }
  },
  "docusaurus-plugin-content-pages": {
    "default": [
      {
        "type": "jsx",
        "permalink": "/",
        "source": "@site/src/pages/index.js"
      },
      {
        "type": "mdx",
        "permalink": "/markdown-page",
        "source": "@site/src/pages/markdown-page.md",
        "title": "Markdown page example",
        "description": "You don't need React to write simple standalone pages.",
        "frontMatter": {
          "title": "Markdown page example"
        }
      }
    ]
  },
  "docusaurus-plugin-debug": {},
  "docusaurus-theme-classic": {},
  "docusaurus-bootstrap-plugin": {},
  "docusaurus-mdx-fallback-plugin": {}
}