"use strict";(self.webpackChunkafms_optimizer=self.webpackChunkafms_optimizer||[]).push([[4789],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>m});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},d=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},f=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),c=p(n),f=r,m=c["".concat(s,".").concat(f)]||c[f]||u[f]||o;return n?a.createElement(m,l(l({ref:t},d),{},{components:n})):a.createElement(m,l({ref:t},d))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,l=new Array(o);l[0]=f;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[c]="string"==typeof e?e:r,l[1]=i;for(var p=2;p<o;p++)l[p]=n[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}f.displayName="MDXCreateElement"},4530:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>p});var a=n(7462),r=(n(7294),n(3905));const o={slug:"using-flask-to-zip-and-download-files-part-2",title:"Using Flask to Zip and Download Files (Part 2)",authors:["eldoraboo"],tags:["tutorial"]},l=void 0,i={permalink:"/blog/using-flask-to-zip-and-download-files-part-2",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2023-03-01-using-flask-to-zip-and-download-files-part-2.md",source:"@site/blog/2023-03-01-using-flask-to-zip-and-download-files-part-2.md",title:"Using Flask to Zip and Download Files (Part 2)",description:"Passing apiUrl as a prop",date:"2023-03-01T00:00:00.000Z",formattedDate:"March 1, 2023",tags:[{label:"tutorial",permalink:"/blog/tags/tutorial"}],readingTime:1.07,hasTruncateMarker:!1,authors:[{name:"Eldora Boo",title:"Data Engineer of AFMS Project",url:"https://github.com/eldoraboo",imageURL:"https://github.com/eldoraboo.png",key:"eldoraboo"}],frontMatter:{slug:"using-flask-to-zip-and-download-files-part-2",title:"Using Flask to Zip and Download Files (Part 2)",authors:["eldoraboo"],tags:["tutorial"]},prevItem:{title:"Using Flask to Zip and Download Files (Part 1)",permalink:"/blog/using-flask-to-zip-and-download-files-part-1"},nextItem:{title:"Setting Up Docker To Connect Client and Server",permalink:"/blog/setting-up-docker-to-connect-client-and-server"}},s={authorsImageUrls:[void 0]},p=[{value:"Passing apiUrl as a prop",id:"passing-apiurl-as-a-prop",level:3},{value:"Download Action",id:"download-action",level:3},{value:"Frontend UI for TextField and Button",id:"frontend-ui-for-textfield-and-button",level:3}],d={toc:p},c="wrapper";function u(e){let{components:t,...n}=e;return(0,r.kt)(c,(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h3",{id:"passing-apiurl-as-a-prop"},"Passing apiUrl as a prop"),(0,r.kt)("p",null,"To begin, we will pass the apiUrl as a prop, it is defined as ",(0,r.kt)("inlineCode",{parentName:"p"},"/file")," in the previous post. We also set a variable to keep track of the filename."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="App.js" withLineNumbers',title:'"App.js"',withLineNumbers:!0},'import * as React from "react";\n\nfunction App({ apiUrl }) {\n    const [fileName, setFileName] = React.useState("");\n}\nexport default App;\n')),(0,r.kt)("h3",{id:"download-action"},"Download Action"),(0,r.kt)("p",null,"With both ",(0,r.kt)("inlineCode",{parentName:"p"},"apiUrl")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"fileName")," we are able to send a request to the Flask API."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="App.js" withLineNumbers',title:'"App.js"',withLineNumbers:!0},'function App({ apiUrl }) {\n    const [fileName, setFileName] = React.useState("");\n    React.useEffect(() => {\n        const downloadButton = document.getElementById("downloadButton");\n        if (downloadButton) {\n        downloadButton.addEventListener("click", () => {\n            fetch(`${apiUrl}/file?fileName=${fileName}`)\n                .then((response) => response.blob())\n                .then((blob) => {\n                    const url = window.URL.createObjectURL(blob);\n                    const a = document.createElement("a");\n                    a.href = url;\n                    a.download = `${fileName}.zip`;\n                    a.click();\n                })\n                .catch((error) => {\n                    console.error(error);\n                });\n            });\n        }\n    }, [apiUrl, fileName]);\n}\nexport default App;\n')),(0,r.kt)("h3",{id:"frontend-ui-for-textfield-and-button"},"Frontend UI for TextField and Button"),(0,r.kt)("p",null,"To retrieve our file name and activate the download. We will make a text field and button for the frontend."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="App.js" withLineNumbers',title:'"App.js"',withLineNumbers:!0},'  return (\n    <div className="App">\n      <header className="App-header">\n        <img src={logo} className="App-logo" alt="logo" />\n        <Stack direction="row" spacing={2}>\n          <TextField\n          id="filled-basic"\n          label="File Name"\n          variant="filled"\n          value={fileName}\n          onChange={(e) => setFileName(e.target.value)}\n        />\n          <Button variant="outlined" id="downloadButton">\n          Download Data\n          </Button>\n        </Stack>\n        {userData && <UserData data={userData} />}\n      </header>\n    </div>\n  );\n')))}u.isMDXComponent=!0}}]);