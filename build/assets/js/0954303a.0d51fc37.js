"use strict";(self.webpackChunkafms_optimizer=self.webpackChunkafms_optimizer||[]).push([[7988],{3905:(t,e,a)=>{a.d(e,{Zo:()=>s,kt:()=>f});var n=a(7294);function r(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function l(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,n)}return a}function i(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?l(Object(a),!0).forEach((function(e){r(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function o(t,e){if(null==t)return{};var a,n,r=function(t,e){if(null==t)return{};var a,n,r={},l=Object.keys(t);for(n=0;n<l.length;n++)a=l[n],e.indexOf(a)>=0||(r[a]=t[a]);return r}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(n=0;n<l.length;n++)a=l[n],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(r[a]=t[a])}return r}var p=n.createContext({}),u=function(t){var e=n.useContext(p),a=e;return t&&(a="function"==typeof t?t(e):i(i({},e),t)),a},s=function(t){var e=u(t.components);return n.createElement(p.Provider,{value:e},t.children)},m="mdxType",d={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},c=n.forwardRef((function(t,e){var a=t.components,r=t.mdxType,l=t.originalType,p=t.parentName,s=o(t,["components","mdxType","originalType","parentName"]),m=u(a),c=r,f=m["".concat(p,".").concat(c)]||m[c]||d[c]||l;return a?n.createElement(f,i(i({ref:e},s),{},{components:a})):n.createElement(f,i({ref:e},s))}));function f(t,e){var a=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var l=a.length,i=new Array(l);i[0]=c;var o={};for(var p in e)hasOwnProperty.call(e,p)&&(o[p]=e[p]);o.originalType=t,o[m]="string"==typeof t?t:r,i[1]=o;for(var u=2;u<l;u++)i[u]=a[u];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}c.displayName="MDXCreateElement"},6953:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>p,contentTitle:()=>i,default:()=>d,frontMatter:()=>l,metadata:()=>o,toc:()=>u});var n=a(7462),r=(a(7294),a(3905));const l={sidebar_position:3},i="Format of Supporting Files",o={unversionedId:"how-to-use-afms/format-of-supporting-files",id:"how-to-use-afms/format-of-supporting-files",title:"Format of Supporting Files",description:"Physical Node",source:"@site/docs/how-to-use-afms/format-of-supporting-files.md",sourceDirName:"how-to-use-afms",slug:"/how-to-use-afms/format-of-supporting-files",permalink:"/docs/how-to-use-afms/format-of-supporting-files",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/how-to-use-afms/format-of-supporting-files.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Format of Hub Files",permalink:"/docs/how-to-use-afms/format-of-hub-files"},next:{title:"Input Variables",permalink:"/docs/how-to-use-afms/input-variables"}},p={},u=[{value:"Physical Node",id:"physical-node",level:2},{value:"Example",id:"example",level:3},{value:"Physical Node Distribution",id:"physical-node-distribution",level:2},{value:"Example",id:"example-1",level:3},{value:"Node Mapping",id:"node-mapping",level:2},{value:"Example",id:"example-2",level:3}],s={toc:u},m="wrapper";function d(t){let{components:e,...a}=t;return(0,r.kt)(m,(0,n.Z)({},s,a,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"format-of-supporting-files"},"Format of Supporting Files"),(0,r.kt)("h2",{id:"physical-node"},"Physical Node"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"physical_node.xlsx"),(0,r.kt)("li",{parentName:"ul"},"list of physical nodes (given id of entity provided by data owners)"),(0,r.kt)("li",{parentName:"ul"},"(physical_id, lat, long)")),(0,r.kt)("h3",{id:"example"},"Example"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"physical_id"),(0,r.kt)("th",{parentName:"tr",align:null},"latitude"),(0,r.kt)("th",{parentName:"tr",align:null},"longitude"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"130"),(0,r.kt)("td",{parentName:"tr",align:null},"1.362004"),(0,r.kt)("td",{parentName:"tr",align:null},"103.9015")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"110"),(0,r.kt)("td",{parentName:"tr",align:null},"1.436646"),(0,r.kt)("td",{parentName:"tr",align:null},"103.8437")))),(0,r.kt)("h2",{id:"physical-node-distribution"},"Physical Node Distribution"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"dist_physical_node.xlsx"),(0,r.kt)("li",{parentName:"ul"},"Travel distance matrix for each pair of nodes"),(0,r.kt)("li",{parentName:"ul"},"(physical_id pairs matrix)")),(0,r.kt)("h3",{id:"example-1"},"Example"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"physical_id"),(0,r.kt)("th",{parentName:"tr",align:null},"130"),(0,r.kt)("th",{parentName:"tr",align:null},"110"),(0,r.kt)("th",{parentName:"tr",align:null},"109"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"130")),(0,r.kt)("td",{parentName:"tr",align:null},"0"),(0,r.kt)("td",{parentName:"tr",align:null},"10.49625"),(0,r.kt)("td",{parentName:"tr",align:null},"23.38562")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"110")),(0,r.kt)("td",{parentName:"tr",align:null},"10.49625"),(0,r.kt)("td",{parentName:"tr",align:null},"0"),(0,r.kt)("td",{parentName:"tr",align:null},"21.45703")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"109")),(0,r.kt)("td",{parentName:"tr",align:null},"23.38562"),(0,r.kt)("td",{parentName:"tr",align:null},"21.45703"),(0,r.kt)("td",{parentName:"tr",align:null},"0")))),(0,r.kt)("h2",{id:"node-mapping"},"Node Mapping"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"map_vn_to_pn.xlsx"),(0,r.kt)("li",{parentName:"ul"},"a mapping of virtual nodes (unique id for coding purposes) to physical nodes"),(0,r.kt)("li",{parentName:"ul"},"(id, physical_id)")),(0,r.kt)("h3",{id:"example-2"},"Example"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"id"),(0,r.kt)("th",{parentName:"tr",align:null},"physical_id"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"1"),(0,r.kt)("td",{parentName:"tr",align:null},"130")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"2"),(0,r.kt)("td",{parentName:"tr",align:null},"110")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"3"),(0,r.kt)("td",{parentName:"tr",align:null},"109")))))}d.isMDXComponent=!0}}]);